import { AsciiSession, MsgView, IJsFixConfig } from 'jspurefix'
import {IInstrmtMDReqGrpNoRelatedSym, IMarketDataRequest, MsgType} from '../../types/FIX50SP2'
import { Md50Factory } from './md50-factory'
import {MdBaseServer} from "../../common/md-base-server";

// interfaces generated by compiler to make messages easy in an IDE

export class Md50Server extends MdBaseServer implements AsciiSession {
  private readonly mdFactory: Md50Factory = new Md50Factory()

  constructor (public readonly config: IJsFixConfig) {
    super(config)
  }

  protected onApplicationMsg (msgType: string, view: MsgView): void {
    this.logger.info(`${view.toJson()}`)
    switch (msgType) {
      case MsgType.MarketDataRequest: {
        this.marketDataRequest(view)
        break
      }
      default: {
        this.logger.info(`unknown msgType ${msgType}`)
        break
      }
    }
  }

  private marketDataRequest (view: MsgView): void {
    const req: IMarketDataRequest = view.toObject() as IMarketDataRequest
    const noSym: (IInstrmtMDReqGrpNoRelatedSym[]|null) = req.InstrmtMDReqGrp?.NoRelatedSym ?? null
    if (noSym == null) return
    const symbol: string = noSym[0]?.Instrument?.Symbol ?? ''
    const id = req.MDReqID
    const price = 1.22759
    const snapshot = this.mdFactory.FullSnapshot(symbol, id, price)
    this.send(MsgType.MarketDataSnapshotFullRefresh, snapshot)
  }

  public sendNews (headline: string): void {
    this.send(MsgType.News, this.mdFactory.News(headline))
  }
}
